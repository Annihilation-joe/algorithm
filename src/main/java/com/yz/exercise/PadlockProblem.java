package com.yz.exercise;

/**
 * +你 有 一 个 带 有 四 个 圆 形 拨 轮 的 转 盘 锁 。 每 个 拨 轮 都 有 10 个 数 字 ： '0' , '1' , '2' , '3' , '4' ,
 * '5' , '6' , '7' , '8' , '9' 。每个拨轮可以自由旋转：例如把 '9' 变为'0'，'0' 变为 '9' 。每
 * 次旋转都只能旋转一个拨轮的一位数字。
 * 锁的初始数字为 '0000' ，一个代表四个拨轮的数字的字符串。
 * 列表 deadends 包含了一组死亡数字，一旦拨轮的数字和列表里的任何一个元素相同，
 * 这个锁将会被永久锁定，无法再被旋转。
 * 字符串target 代表可以解锁的数字，你需要给出最小的旋转次数，如果无论如何不能解
 * 锁，返回 -1
 * @author yu.zh-neu
 * @create 2023-07-14 19:18
 */
public class PadlockProblem {
    public static void main(String[] args) {

    }


}
